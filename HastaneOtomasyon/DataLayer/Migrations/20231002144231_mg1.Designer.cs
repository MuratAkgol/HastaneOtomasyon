// <auto-generated />
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231002144231_mg1")]
    partial class mg1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Doktor", b =>
                {
                    b.Property<int>("DoktorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoktorId"), 1L, 1);

                    b.Property<string>("DoktorAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoktorSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoktorTc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolikinlikId")
                        .HasColumnType("int");

                    b.HasKey("DoktorId");

                    b.HasIndex("PolikinlikId");

                    b.ToTable("tbl_Doktorlar");
                });

            modelBuilder.Entity("EntityLayer.Hasta", b =>
                {
                    b.Property<int>("HastaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HastaId"), 1L, 1);

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<string>("HastaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaTc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HastaId");

                    b.HasIndex("DoktorId");

                    b.ToTable("tbl_Hastalar");
                });

            modelBuilder.Entity("EntityLayer.Polikinlik", b =>
                {
                    b.Property<int>("PolikinlikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolikinlikId"), 1L, 1);

                    b.Property<string>("PolikinlikAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolikinlikId");

                    b.ToTable("tbl_Polikinlikler");
                });

            modelBuilder.Entity("EntityLayer.Randevu", b =>
                {
                    b.Property<int>("RandevuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuId"), 1L, 1);

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<int>("Hasta")
                        .HasColumnType("int");

                    b.Property<string>("Saat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RandevuId");

                    b.ToTable("tbl_Randevu");
                });

            modelBuilder.Entity("EntityLayer.Saatler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Saat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Saatler");
                });

            modelBuilder.Entity("EntityLayer.Doktor", b =>
                {
                    b.HasOne("EntityLayer.Polikinlik", "Polikinlik")
                        .WithMany("Doktorlar")
                        .HasForeignKey("PolikinlikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Polikinlik");
                });

            modelBuilder.Entity("EntityLayer.Hasta", b =>
                {
                    b.HasOne("EntityLayer.Doktor", "Doktor")
                        .WithMany("Hastalar")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");
                });

            modelBuilder.Entity("EntityLayer.Doktor", b =>
                {
                    b.Navigation("Hastalar");
                });

            modelBuilder.Entity("EntityLayer.Polikinlik", b =>
                {
                    b.Navigation("Doktorlar");
                });
#pragma warning restore 612, 618
        }
    }
}
